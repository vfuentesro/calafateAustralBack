# Generated by Django 5.2.3 on 2025-06-26 20:15

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id_categoria', models.AutoField(db_column='ID_Categoria', primary_key=True, serialize=False)),
                ('nombre_c', models.CharField(db_column='Nombre_C', max_length=100)),
            ],
            options={
                'db_table': 'CATEGORIA',
            },
        ),
        migrations.CreateModel(
            name='Contacto',
            fields=[
                ('id_contacto', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('correo', models.EmailField(max_length=100, verbose_name='Correo electrónico')),
                ('asunto', models.CharField(max_length=200, verbose_name='Asunto')),
                ('mensaje', models.TextField(verbose_name='Mensaje')),
                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de envío')),
                ('leido', models.BooleanField(default=False, verbose_name='Leído')),
            ],
            options={
                'verbose_name': 'Mensaje de Contacto',
                'verbose_name_plural': 'Mensajes de Contacto',
                'db_table': 'CONTACTO',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='MetodoPago',
            fields=[
                ('id_metodo', models.AutoField(db_column='ID_Metodo', primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'METODO_PAGO',
            },
        ),
        migrations.CreateModel(
            name='Oferta',
            fields=[
                ('id_oferta', models.AutoField(db_column='ID_Oferta', primary_key=True, serialize=False)),
                ('descuento', models.DecimalField(db_column='Descuento', decimal_places=2, max_digits=5)),
                ('fecha_inicio', models.DateField(db_column='Fecha_inicio')),
                ('fecha_fin', models.DateField(db_column='Fecha_fin')),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('no_activo', 'No Activo')], db_column='Estado', max_length=10)),
            ],
            options={
                'db_table': 'OFERTA',
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id_producto', models.AutoField(db_column='ID_Producto', primary_key=True, serialize=False, verbose_name='ID Producto')),
                ('sku', models.CharField(help_text='Código de Referencia Único (SKU) del producto', max_length=50, unique=True, verbose_name='SKU')),
                ('nombre_p', models.CharField(db_column='Nombre_P', max_length=100, verbose_name='Nombre Producto')),
                ('descripcion_p', models.TextField(blank=True, db_column='Descripcion_P', null=True, verbose_name='Descripción Producto')),
                ('precio_p', models.IntegerField(db_column='Precio_P', verbose_name='Precio Producto')),
                ('stock_p', models.IntegerField(db_column='Stock_P', validators=[django.core.validators.MinValueValidator(0, message='El stock no puede ser un número negativo.')], verbose_name='Stock Producto')),
                ('peso_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Peso del producto en kilogramos.', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.01, message='El peso debe ser positivo.')], verbose_name='Peso (kg)')),
                ('alto_cm', models.DecimalField(blank=True, decimal_places=1, help_text='Alto del producto en centímetros.', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.1, message='El alto debe ser positivo.')], verbose_name='Alto (cm)')),
                ('ancho_cm', models.DecimalField(blank=True, decimal_places=1, help_text='Ancho del producto en centímetros.', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.1, message='El ancho debe ser positivo.')], verbose_name='Ancho (cm)')),
                ('largo_cm', models.DecimalField(blank=True, decimal_places=1, help_text='Largo del producto en centímetros.', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.1, message='El largo debe ser positivo.')], verbose_name='Largo (cm)')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='productos/', verbose_name='Imagen Principal')),
                ('id_categoria', models.ForeignKey(blank=True, db_column='ID_Categoria', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Tienda.categoria', verbose_name='Categoría')),
                ('id_oferta', models.ForeignKey(blank=True, db_column='ID_Oferta', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Tienda.oferta', verbose_name='Oferta')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'db_table': 'PRODUCTO',
            },
        ),
        migrations.CreateModel(
            name='ImagenProducto',
            fields=[
                ('id_imagen', models.AutoField(primary_key=True, serialize=False)),
                ('imagen', models.ImageField(upload_to='productos/')),
                ('descripcion', models.CharField(blank=True, help_text='Descripción opcional de la imagen', max_length=200, null=True)),
                ('orden', models.IntegerField(default=0, help_text='Orden de aparición de la imagen')),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagenes', to='Tienda.producto')),
            ],
            options={
                'verbose_name': 'Imagen de Producto',
                'verbose_name_plural': 'Imágenes de Productos',
                'db_table': 'IMAGEN_PRODUCTO',
                'ordering': ['orden', 'fecha_subida'],
            },
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('id_venta', models.AutoField(db_column='ID_Venta', primary_key=True, serialize=False)),
                ('fecha_v', models.DateField(db_column='Fecha_V')),
                ('total_v', models.DecimalField(db_column='Total_V', decimal_places=2, max_digits=10)),
                ('tipo_comprador', models.CharField(blank=True, choices=[('usuario', 'Usuario Registrado')], max_length=10, null=True)),
                ('estado_pago', models.CharField(choices=[('pendiente', 'Pendiente'), ('pagado', 'Pagado'), ('rechazado', 'Rechazado'), ('cancelado', 'Cancelado')], default='pendiente', max_length=20, verbose_name='Estado del Pago')),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID de Transacción Getnet')),
                ('fecha_pago', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Pago')),
                ('checkout_session_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID de Sesión de Checkout')),
                ('webhook_data', models.JSONField(blank=True, null=True, verbose_name='Datos del Webhook')),
                ('id_metodo', models.ForeignKey(blank=True, db_column='ID_Metodo', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Tienda.metodopago')),
            ],
            options={
                'verbose_name': 'Venta',
                'verbose_name_plural': 'Ventas',
                'db_table': 'VENTA',
            },
        ),
        migrations.CreateModel(
            name='Detalleventa',
            fields=[
                ('id_detalleventa', models.AutoField(db_column='ID_DetalleVenta', primary_key=True, serialize=False)),
                ('cantidad_dv', models.IntegerField(db_column='Cantidad_DV')),
                ('precio_unitario_dv', models.DecimalField(db_column='Precio_unitario_DV', decimal_places=2, max_digits=10)),
                ('subtotal_dv', models.DecimalField(db_column='Subtotal_DV', decimal_places=2, max_digits=10)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_preparacion', 'En Preparación'), ('enviado', 'Enviado'), ('entregado', 'Entregado'), ('cancelado', 'Cancelado')], default='pendiente', max_length=20, verbose_name='Estado del Envío')),
                ('numero_seguimiento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número de Seguimiento')),
                ('id_producto', models.ForeignKey(blank=True, db_column='ID_Producto', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Tienda.producto')),
                ('id_venta', models.ForeignKey(blank=True, db_column='ID_Venta', null=True, on_delete=django.db.models.deletion.CASCADE, to='Tienda.venta')),
            ],
            options={
                'db_table': 'DETALLEVENTA',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rut_numero', models.IntegerField(db_column='RUT_NUMERO', help_text='Número del RUT sin dígito verificador ni guion', unique=True, verbose_name='RUT Número')),
                ('rut_dv', models.CharField(db_column='RUT_DV', help_text='Dígito verificador del RUT', max_length=1, verbose_name='Dígito Verificador')),
                ('nombre_u', models.CharField(db_column='Nombre_U', max_length=100, verbose_name='Nombre Usuario')),
                ('apellido_u', models.CharField(db_column='Apellido_U', max_length=100, verbose_name='Apellido Usuario')),
                ('numero_telefono_u', models.CharField(db_column='Numero_telefono_U', max_length=15, validators=[django.core.validators.RegexValidator(message='Ingrese un número chileno válido (+56912345678 o 912345678)', regex='^\\+?56?\\d{9,15}$')], verbose_name='Número Teléfono')),
                ('correo_u', models.EmailField(db_column='Correo_U', max_length=100, unique=True, verbose_name='Correo Usuario')),
                ('tipo_u', models.CharField(choices=[('cliente', 'Cliente'), ('admin', 'Administrador')], db_column='Tipo_U', default='cliente', max_length=10, verbose_name='Tipo Usuario')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('password', models.CharField(default='', max_length=128)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'USUARIO',
            },
        ),
        migrations.AddField(
            model_name='venta',
            name='usuario',
            field=models.ForeignKey(blank=True, db_column='ID_USUARIO', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DireccionUsuario',
            fields=[
                ('id_direccion_usuario', models.AutoField(db_column='ID_Direccion_Usuario', primary_key=True, serialize=False)),
                ('region', models.CharField(db_column='Region', max_length=100)),
                ('comuna', models.CharField(db_column='Comuna', max_length=100)),
                ('calle', models.CharField(db_column='Calle', max_length=100)),
                ('numero', models.CharField(db_column='Numero', max_length=10)),
                ('numero_departamento_oficina_otro', models.CharField(blank=True, db_column='Numero_Departamento_Oficina_Otro', max_length=50, null=True)),
                ('nombre_receptor', models.CharField(db_column='Nombre_Receptor', max_length=100)),
                ('telefono_receptor', models.CharField(db_column='Telefono_Receptor', max_length=20)),
                ('usuario', models.ForeignKey(db_column='ID_USUARIO', on_delete=django.db.models.deletion.DO_NOTHING, related_name='direcciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dirección de Usuario',
                'verbose_name_plural': 'Direcciones de Usuario',
                'db_table': 'DIRECCION_USUARIO',
            },
        ),
    ]
